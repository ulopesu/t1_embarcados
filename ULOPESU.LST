     1                                  ; vers�o de 10/05/2007
     2                                  ; corrigido erro de arredondamento na rotina line.
     3                                  ; circle e full_circle disponibilizados por Jefferson Moro em 10/2009
     4                                  ;
     5                                  segment code
     6                                  ..start:
     7 00000000 B8[0000]                	mov 		ax,data
     8 00000003 8ED8                    	mov 		ds,ax
     9 00000005 B8[0000]                	mov 		ax,stack
    10 00000008 8ED0                    	mov 		ss,ax
    11 0000000A BC[0002]                	mov 		sp,stacktop
    12                                  
    13                                  ; salvar modo corrente de video(vendo como est� o modo de video da maquina)
    14 0000000D B40F                    	mov  		ah,0Fh
    15 0000000F CD10                    	int  		10h
    16 00000011 A2[0100]                	mov  		[modo_anterior],al   
    17                                  
    18                                  ; alterar modo de video para gr�fico 640x480 16 cores
    19 00000014 B012                    	mov     	al,12h
    20 00000016 B400                    	mov     	ah,0
    21 00000018 CD10                    	int     	10h
    22                                  
    23                                  
    24                                  ; desenha divisorias da tela 
    25                                  	; escreve nome
    26 0000001A B91B00                  	mov     	cx,27			;n�mero de caracteres
    27 0000001D BB0000                  	mov     	bx,0
    28 00000020 B61D                    	mov     	dh,29			;linha 0-29
    29 00000022 B223                    	mov     	dl,35			;coluna 0-79
    30 00000024 C606[0000]0A            	mov		byte[cor], verde_claro
    31                                  	l_w_name:
    32 00000029 E8F001                  		call	cursor
    33 0000002C 8A87[0A00]              		mov     al,[bx+nome_aluno]
    34 00000030 E80002                  		call	caracter
    35 00000033 43                      		inc     bx			;proximo caracter
    36 00000034 FEC2                    		inc		dl			;avanca a coluna
    37 00000036 E2F1                    		loop    l_w_name
    38                                  
    39                                  	; escreve sair
    40 00000038 B90400                  	mov     	cx,4			;n�mero de caracteres
    41 0000003B BB0000                  	mov     	bx,0
    42 0000003E B61B                    	mov     	dh,27			;linha 0-29
    43 00000040 B206                    	mov     	dl,6			;coluna 0-79
    44 00000042 C606[0000]0C            	mov		byte[cor], rosa
    45                                  	l_w_sair:
    46 00000047 E8D201                  		call	cursor
    47 0000004A 8A87[3900]              		mov     al,[bx+sair_str]
    48 0000004E E8E201                  		call	caracter
    49 00000051 43                      		inc     bx			;proximo caracter
    50 00000052 FEC2                    		inc		dl			;avanca a coluna
    51 00000054 E2F1                    		loop    l_w_sair
    52                                  
    53                                  	; escreve FIR_3
    54 00000056 B90500                  	mov     	cx,5			;n�mero de caracteres
    55 00000059 BB0000                  	mov     	bx,0
    56 0000005C B616                    	mov     	dh,22			;linha 0-29
    57 0000005E B206                    	mov     	dl,6			;coluna 0-79
    58 00000060 C606[0000]0B            	mov		byte[cor], cyan_claro
    59                                  	l_w_fir3:
    60 00000065 E8B401                  		call	cursor
    61 00000068 8A87[3400]              		mov     al,[bx+fir3_str]
    62 0000006C E8C401                  		call	caracter
    63 0000006F 43                      		inc     bx			;proximo caracter
    64 00000070 FEC2                    		inc		dl			;avanca a coluna
    65 00000072 E2F1                    		loop    l_w_fir3
    66                                  
    67                                  	; escreve FIR_2
    68 00000074 B90500                  	mov     	cx,5			;n�mero de caracteres
    69 00000077 BB0000                  	mov     	bx,0
    70 0000007A B611                    	mov     	dh,17			;linha 0-29
    71 0000007C B206                    	mov     	dl,6			;coluna 0-79
    72 0000007E C606[0000]0E            	mov		byte[cor], amarelo
    73                                  	l_w_fir2:
    74 00000083 E89601                  		call	cursor
    75 00000086 8A87[2F00]              		mov     al,[bx+fir2_str]
    76 0000008A E8A601                  		call	caracter
    77 0000008D 43                      		inc     bx			;proximo caracter
    78 0000008E FEC2                    		inc		dl			;avanca a coluna
    79 00000090 E2F1                    		loop    l_w_fir2
    80                                  
    81                                  	; escreve FIR_1
    82 00000092 B90500                  	mov     	cx,5			;n�mero de caracteres
    83 00000095 BB0000                  	mov     	bx,0
    84 00000098 B60C                    	mov     	dh,12			;linha 0-29
    85 0000009A B206                    	mov     	dl,6			;coluna 0-79
    86 0000009C C606[0000]0D            	mov		byte[cor], magenta_claro
    87                                  	l_w_fir1:
    88 000000A1 E87801                  		call	cursor
    89 000000A4 8A87[2A00]              		mov     al,[bx+fir1_str]
    90 000000A8 E88801                  		call	caracter
    91 000000AB 43                      		inc     bx			;proximo caracter
    92 000000AC FEC2                    		inc		dl			;avanca a coluna
    93 000000AE E2F1                    		loop    l_w_fir1
    94                                  
    95                                  	; escreve seta
    96 000000B0 B90500                  	mov     	cx,5			;n�mero de caracteres
    97 000000B3 BB0000                  	mov     	bx,0
    98 000000B6 B607                    	mov     	dh,7			;linha 0-29
    99 000000B8 B206                    	mov     	dl,6			;coluna 0-79
   100 000000BA C606[0000]0F            	mov		byte[cor], branco_intenso
   101                                  	l_w_seta:
   102 000000BF E85A01                  		call	cursor
   103 000000C2 8A87[3D00]              		mov     al, [bx+seta_str]
   104 000000C6 E86A01                  		call	caracter
   105 000000C9 43                      		inc     bx			;proximo caracter
   106 000000CA FEC2                    		inc		dl			;avanca a coluna
   107 000000CC E2F1                    		loop    l_w_seta
   108                                  
   109                                  	; escreve abrir
   110 000000CE B90500                  	mov     	cx,5			;n�mero de caracteres
   111 000000D1 BB0000                  	mov     	bx,0
   112 000000D4 B602                    	mov     	dh,2			;linha 0-29
   113 000000D6 B206                    	mov     	dl,6			;coluna 0-79
   114 000000D8 C606[0000]02            	mov		byte[cor], verde
   115                                  	l_w_abrir:
   116 000000DD E83C01                  		call	cursor
   117 000000E0 8A87[2500]              		mov     al,[bx+abrir_str]
   118 000000E4 E84C01                  		call	caracter
   119 000000E7 43                      		inc     bx			;proximo caracter
   120 000000E8 FEC2                    		inc		dl			;avanca a coluna
   121 000000EA E2F1                    		loop    l_w_abrir
   122                                  
   123                                  
   124                                  	; bordas externas
   125 000000EC C606[0000]0F            	mov		byte[cor], branco_intenso
   126 000000F1 B80000                  	mov		ax,0
   127 000000F4 50                      	push		ax
   128 000000F5 B80000                  	mov		ax,0
   129 000000F8 50                      	push		ax
   130 000000F9 B80000                  	mov		ax,0
   131 000000FC 50                      	push		ax
   132 000000FD B8DF01                  	mov		ax,479
   133 00000100 50                      	push		ax
   134 00000101 E80F03                  	call		line
   135                                  
   136 00000104 C606[0000]0F            	mov		byte[cor], branco_intenso
   137 00000109 B80000                  	mov		ax,0
   138 0000010C 50                      	push		ax
   139 0000010D B80000                  	mov		ax,0
   140 00000110 50                      	push		ax
   141 00000111 B87F02                  	mov		ax,639
   142 00000114 50                      	push		ax
   143 00000115 B80000                  	mov		ax,0
   144 00000118 50                      	push		ax
   145 00000119 E8F702                  	call		line
   146                                  
   147 0000011C C606[0000]0F            	mov		byte[cor], branco_intenso
   148 00000121 B87F02                  	mov		ax,639
   149 00000124 50                      	push		ax
   150 00000125 B80000                  	mov		ax,0
   151 00000128 50                      	push		ax
   152 00000129 B87F02                  	mov		ax,639
   153 0000012C 50                      	push		ax
   154 0000012D B8DF01                  	mov		ax,479
   155 00000130 50                      	push		ax
   156 00000131 E8DF02                  	call		line
   157                                  
   158 00000134 C606[0000]0F            	mov		byte[cor], branco_intenso
   159 00000139 B80000                  	mov		ax,0
   160 0000013C 50                      	push		ax
   161 0000013D B8DF01                  	mov		ax,479
   162 00000140 50                      	push		ax
   163 00000141 B87F02                  	mov		ax,639
   164 00000144 50                      	push		ax
   165 00000145 B8DF01                  	mov		ax,479
   166 00000148 50                      	push		ax
   167 00000149 E8C702                  	call		line
   168                                  
   169                                  	; bordas internas centrais
   170 0000014C C606[0000]0F            	mov		byte[cor], branco_intenso
   171 00000151 B88B00                  	mov		ax,139
   172 00000154 50                      	push		ax
   173 00000155 B80000                  	mov		ax,0
   174 00000158 50                      	push		ax
   175 00000159 B88B00                  	mov		ax,139
   176 0000015C 50                      	push		ax
   177 0000015D B8DF01                  	mov		ax,479
   178 00000160 50                      	push		ax
   179 00000161 E8AF02                  	call		line
   180                                  
   181 00000164 C606[0000]0F            	mov		byte[cor], branco_intenso
   182 00000169 B88C00                  	mov		ax,140
   183 0000016C 50                      	push		ax
   184 0000016D B81300                  	mov		ax,19
   185 00000170 50                      	push		ax
   186 00000171 B87F02                  	mov		ax,639
   187 00000174 50                      	push		ax
   188 00000175 B81300                  	mov		ax,19
   189 00000178 50                      	push		ax
   190 00000179 E89702                  	call		line
   191                                  
   192 0000017C C606[0000]0F            	mov		byte[cor], branco_intenso
   193 00000181 B88C00                  	mov		ax,140
   194 00000184 50                      	push		ax
   195 00000185 B8F900                  	mov		ax,249
   196 00000188 50                      	push		ax
   197 00000189 B87F02                  	mov		ax,639
   198 0000018C 50                      	push		ax
   199 0000018D B8F900                  	mov		ax,249
   200 00000190 50                      	push		ax
   201 00000191 E87F02                  	call		line
   202                                  
   203                                  	; bordas internas menu
   204 00000194 C606[0000]0F            	mov		byte[cor], branco_intenso
   205 00000199 B80000                  	mov		ax,0
   206 0000019C 50                      	push		ax
   207 0000019D B84F00                  	mov		ax,79
   208 000001A0 50                      	push		ax
   209 000001A1 B88B00                  	mov		ax,139
   210 000001A4 50                      	push		ax
   211 000001A5 B84F00                  	mov		ax,79
   212 000001A8 50                      	push		ax
   213 000001A9 E86702                  	call		line
   214                                  
   215 000001AC C606[0000]0F            	mov		byte[cor], branco_intenso
   216 000001B1 B80000                  	mov		ax,0
   217 000001B4 50                      	push		ax
   218 000001B5 B89F00                  	mov		ax,159
   219 000001B8 50                      	push		ax
   220 000001B9 B88B00                  	mov		ax,139
   221 000001BC 50                      	push		ax
   222 000001BD B89F00                  	mov		ax,159
   223 000001C0 50                      	push		ax
   224 000001C1 E84F02                  	call		line
   225                                  
   226 000001C4 C606[0000]0F            	mov		byte[cor], branco_intenso
   227 000001C9 B80000                  	mov		ax,0
   228 000001CC 50                      	push		ax
   229 000001CD B8EF00                  	mov		ax,239
   230 000001D0 50                      	push		ax
   231 000001D1 B88B00                  	mov		ax,139
   232 000001D4 50                      	push		ax
   233 000001D5 B8EF00                  	mov		ax,239
   234 000001D8 50                      	push		ax
   235 000001D9 E83702                  	call		line
   236                                  
   237 000001DC C606[0000]0F            	mov		byte[cor], branco_intenso
   238 000001E1 B80000                  	mov		ax,0
   239 000001E4 50                      	push		ax
   240 000001E5 B83F01                  	mov		ax,319
   241 000001E8 50                      	push		ax
   242 000001E9 B88B00                  	mov		ax,139
   243 000001EC 50                      	push		ax
   244 000001ED B83F01                  	mov		ax,319
   245 000001F0 50                      	push		ax
   246 000001F1 E81F02                  	call		line
   247                                  
   248 000001F4 C606[0000]0F            	mov		byte[cor], branco_intenso
   249 000001F9 B80000                  	mov		ax,0
   250 000001FC 50                      	push		ax
   251 000001FD B88F01                  	mov		ax,399
   252 00000200 50                      	push		ax
   253 00000201 B88B00                  	mov		ax,139
   254 00000204 50                      	push		ax
   255 00000205 B88F01                  	mov		ax,399
   256 00000208 50                      	push		ax
   257 00000209 E80702                  	call		line
   258                                  
   259 0000020C B408                    	mov    	ah,08h
   260 0000020E CD21                    	int     21h
   261 00000210 B400                    	mov  	ah,0   			; set video mode
   262 00000212 A0[0100]                	mov  	al,[modo_anterior]   	; modo anterior
   263 00000215 CD10                    	int  	10h
   264 00000217 B8004C                  	mov     ax,4c00h
   265 0000021A CD21                    	int     21h
   266                                  
   267                                  ;***************************************************************************
   268                                  ;
   269                                  ;   fun��o cursor
   270                                  ;
   271                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   272                                  cursor:
   273 0000021C 9C                      		pushf
   274 0000021D 50                      		push 		ax
   275 0000021E 53                      		push 		bx
   276 0000021F 51                      		push		cx
   277 00000220 52                      		push		dx
   278 00000221 56                      		push		si
   279 00000222 57                      		push		di
   280 00000223 55                      		push		bp
   281 00000224 B402                    		mov     	ah,2
   282 00000226 B700                    		mov     	bh,0
   283 00000228 CD10                    		int     	10h
   284 0000022A 5D                      		pop		bp
   285 0000022B 5F                      		pop		di
   286 0000022C 5E                      		pop		si
   287 0000022D 5A                      		pop		dx
   288 0000022E 59                      		pop		cx
   289 0000022F 5B                      		pop		bx
   290 00000230 58                      		pop		ax
   291 00000231 9D                      		popf
   292 00000232 C3                      		ret
   293                                  ;_____________________________________________________________________________
   294                                  ;
   295                                  ;   fun��o caracter escrito na posi��o do cursor
   296                                  ;
   297                                  ; al= caracter a ser escrito
   298                                  ; cor definida na variavel cor
   299                                  caracter:
   300 00000233 9C                      		pushf
   301 00000234 50                      		push 		ax
   302 00000235 53                      		push 		bx
   303 00000236 51                      		push		cx
   304 00000237 52                      		push		dx
   305 00000238 56                      		push		si
   306 00000239 57                      		push		di
   307 0000023A 55                      		push		bp
   308 0000023B B409                        		mov     	ah,9
   309 0000023D B700                        		mov     	bh,0
   310 0000023F B90100                      		mov     	cx,1
   311 00000242 8A1E[0000]                 		mov     	bl,[cor]
   312 00000246 CD10                        		int     	10h
   313 00000248 5D                      		pop		bp
   314 00000249 5F                      		pop		di
   315 0000024A 5E                      		pop		si
   316 0000024B 5A                      		pop		dx
   317 0000024C 59                      		pop		cx
   318 0000024D 5B                      		pop		bx
   319 0000024E 58                      		pop		ax
   320 0000024F 9D                      		popf
   321 00000250 C3                      		ret
   322                                  ;_____________________________________________________________________________
   323                                  ;
   324                                  ;   fun��o plot_xy
   325                                  ;
   326                                  ; push x; push y; call plot_xy;  (x<639, y<479)
   327                                  ; cor definida na variavel cor
   328                                  plot_xy:
   329 00000251 55                      		push		bp
   330 00000252 89E5                    		mov		bp,sp
   331 00000254 9C                      		pushf
   332 00000255 50                      		push 		ax
   333 00000256 53                      		push 		bx
   334 00000257 51                      		push		cx
   335 00000258 52                      		push		dx
   336 00000259 56                      		push		si
   337 0000025A 57                      		push		di
   338 0000025B B40C                    	    mov     	ah,0ch
   339 0000025D A0[0000]                	    mov     	al,[cor]
   340 00000260 B700                    	    mov     	bh,0
   341 00000262 BADF01                  	    mov     	dx,479
   342 00000265 2B5604                  		sub		dx,[bp+4]
   343 00000268 8B4E06                  	    mov     	cx,[bp+6]
   344 0000026B CD10                    	    int     	10h
   345 0000026D 5F                      		pop		di
   346 0000026E 5E                      		pop		si
   347 0000026F 5A                      		pop		dx
   348 00000270 59                      		pop		cx
   349 00000271 5B                      		pop		bx
   350 00000272 58                      		pop		ax
   351 00000273 9D                      		popf
   352 00000274 5D                      		pop		bp
   353 00000275 C20400                  		ret		4
   354                                  ;_____________________________________________________________________________
   355                                  ;    fun��o circle
   356                                  ;	 push xc; push yc; push r; call circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   357                                  ; cor definida na variavel cor
   358                                  circle:
   359 00000278 55                      	push 	bp
   360 00000279 89E5                    	mov	 	bp,sp
   361 0000027B 9C                      	pushf                        ;coloca os flags na pilha
   362 0000027C 50                      	push 	ax
   363 0000027D 53                      	push 	bx
   364 0000027E 51                      	push	cx
   365 0000027F 52                      	push	dx
   366 00000280 56                      	push	si
   367 00000281 57                      	push	di
   368                                  	
   369 00000282 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   370 00000285 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   371 00000288 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   372                                  	
   373 0000028B 89DA                    	mov 	dx,bx	
   374 0000028D 01CA                    	add		dx,cx       ;ponto extremo superior
   375 0000028F 50                      	push    ax			
   376 00000290 52                      	push	dx
   377 00000291 E8BDFF                  	call plot_xy
   378                                  	
   379 00000294 89DA                    	mov		dx,bx
   380 00000296 29CA                    	sub		dx,cx       ;ponto extremo inferior
   381 00000298 50                      	push    ax			
   382 00000299 52                      	push	dx
   383 0000029A E8B4FF                  	call plot_xy
   384                                  	
   385 0000029D 89C2                    	mov 	dx,ax	
   386 0000029F 01CA                    	add		dx,cx       ;ponto extremo direita
   387 000002A1 52                      	push    dx			
   388 000002A2 53                      	push	bx
   389 000002A3 E8ABFF                  	call plot_xy
   390                                  	
   391 000002A6 89C2                    	mov		dx,ax
   392 000002A8 29CA                    	sub		dx,cx       ;ponto extremo esquerda
   393 000002AA 52                      	push    dx			
   394 000002AB 53                      	push	bx
   395 000002AC E8A2FF                  	call plot_xy
   396                                  		
   397 000002AF 89CF                    	mov		di,cx
   398 000002B1 81EF0100                	sub		di,1	 ;di=r-1
   399 000002B5 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   400                                  	
   401                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   402                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   403                                  ;valores positivos para d
   404                                  
   405                                  stay:				;loop
   406 000002B8 89FE                    	mov		si,di
   407 000002BA 81FE0000                	cmp		si,0
   408 000002BE 7F0E                    	jg		inf       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   409 000002C0 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   410 000002C2 D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   411 000002C4 81C60300                	add		si,3
   412 000002C8 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   413 000002CA 42                      	inc		dx		;incrementa dx
   414 000002CB E90E00                  	jmp		plotar
   415                                  inf:	
   416 000002CE 89D6                    	mov		si,dx
   417 000002D0 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   418 000002D2 D1E6                    	sal		si,1
   419 000002D4 81C60500                	add		si,5
   420 000002D8 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   421 000002DA 42                      	inc		dx		;incrementa x (dx)
   422 000002DB 49                      	dec		cx		;decrementa y (cx)
   423                                  	
   424                                  plotar:	
   425 000002DC 89D6                    	mov		si,dx
   426 000002DE 01C6                    	add		si,ax
   427 000002E0 56                      	push    si			;coloca a abcisa x+xc na pilha
   428 000002E1 89CE                    	mov		si,cx
   429 000002E3 01DE                    	add		si,bx
   430 000002E5 56                      	push    si			;coloca a ordenada y+yc na pilha
   431 000002E6 E868FF                  	call plot_xy		;toma conta do segundo octante
   432 000002E9 89C6                    	mov		si,ax
   433 000002EB 01D6                    	add		si,dx
   434 000002ED 56                      	push    si			;coloca a abcisa xc+x na pilha
   435 000002EE 89DE                    	mov		si,bx
   436 000002F0 29CE                    	sub		si,cx
   437 000002F2 56                      	push    si			;coloca a ordenada yc-y na pilha
   438 000002F3 E85BFF                  	call plot_xy		;toma conta do s�timo octante
   439 000002F6 89C6                    	mov		si,ax
   440 000002F8 01CE                    	add		si,cx
   441 000002FA 56                      	push    si			;coloca a abcisa xc+y na pilha
   442 000002FB 89DE                    	mov		si,bx
   443 000002FD 01D6                    	add		si,dx
   444 000002FF 56                      	push    si			;coloca a ordenada yc+x na pilha
   445 00000300 E84EFF                  	call plot_xy		;toma conta do segundo octante
   446 00000303 89C6                    	mov		si,ax
   447 00000305 01CE                    	add		si,cx
   448 00000307 56                      	push    si			;coloca a abcisa xc+y na pilha
   449 00000308 89DE                    	mov		si,bx
   450 0000030A 29D6                    	sub		si,dx
   451 0000030C 56                      	push    si			;coloca a ordenada yc-x na pilha
   452 0000030D E841FF                  	call plot_xy		;toma conta do oitavo octante
   453 00000310 89C6                    	mov		si,ax
   454 00000312 29D6                    	sub		si,dx
   455 00000314 56                      	push    si			;coloca a abcisa xc-x na pilha
   456 00000315 89DE                    	mov		si,bx
   457 00000317 01CE                    	add		si,cx
   458 00000319 56                      	push    si			;coloca a ordenada yc+y na pilha
   459 0000031A E834FF                  	call plot_xy		;toma conta do terceiro octante
   460 0000031D 89C6                    	mov		si,ax
   461 0000031F 29D6                    	sub		si,dx
   462 00000321 56                      	push    si			;coloca a abcisa xc-x na pilha
   463 00000322 89DE                    	mov		si,bx
   464 00000324 29CE                    	sub		si,cx
   465 00000326 56                      	push    si			;coloca a ordenada yc-y na pilha
   466 00000327 E827FF                  	call plot_xy		;toma conta do sexto octante
   467 0000032A 89C6                    	mov		si,ax
   468 0000032C 29CE                    	sub		si,cx
   469 0000032E 56                      	push    si			;coloca a abcisa xc-y na pilha
   470 0000032F 89DE                    	mov		si,bx
   471 00000331 29D6                    	sub		si,dx
   472 00000333 56                      	push    si			;coloca a ordenada yc-x na pilha
   473 00000334 E81AFF                  	call plot_xy		;toma conta do quinto octante
   474 00000337 89C6                    	mov		si,ax
   475 00000339 29CE                    	sub		si,cx
   476 0000033B 56                      	push    si			;coloca a abcisa xc-y na pilha
   477 0000033C 89DE                    	mov		si,bx
   478 0000033E 01D6                    	add		si,dx
   479 00000340 56                      	push    si			;coloca a ordenada yc-x na pilha
   480 00000341 E80DFF                  	call plot_xy		;toma conta do quarto octante
   481                                  	
   482 00000344 39D1                    	cmp		cx,dx
   483 00000346 7203                    	jb		fim_circle  ;se cx (y) est� abaixo de dx (x), termina     
   484 00000348 E96DFF                  	jmp		stay		;se cx (y) est� acima de dx (x), continua no loop
   485                                  	
   486                                  	
   487                                  fim_circle:
   488 0000034B 5F                      	pop		di
   489 0000034C 5E                      	pop		si
   490 0000034D 5A                      	pop		dx
   491 0000034E 59                      	pop		cx
   492 0000034F 5B                      	pop		bx
   493 00000350 58                      	pop		ax
   494 00000351 9D                      	popf
   495 00000352 5D                      	pop		bp
   496 00000353 C20600                  	ret		6
   497                                  ;-----------------------------------------------------------------------------
   498                                  ;    fun��o full_circle
   499                                  ;	 push xc; push yc; push r; call full_circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   500                                  ; cor definida na variavel cor					  
   501                                  full_circle:
   502 00000356 55                      	push 	bp
   503 00000357 89E5                    	mov	 	bp,sp
   504 00000359 9C                      	pushf                        ;coloca os flags na pilha
   505 0000035A 50                      	push 	ax
   506 0000035B 53                      	push 	bx
   507 0000035C 51                      	push	cx
   508 0000035D 52                      	push	dx
   509 0000035E 56                      	push	si
   510 0000035F 57                      	push	di
   511                                  
   512 00000360 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   513 00000363 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   514 00000366 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   515                                  	
   516 00000369 89DE                    	mov		si,bx
   517 0000036B 29CE                    	sub		si,cx
   518 0000036D 50                      	push    ax			;coloca xc na pilha			
   519 0000036E 56                      	push	si			;coloca yc-r na pilha
   520 0000036F 89DE                    	mov		si,bx
   521 00000371 01CE                    	add		si,cx
   522 00000373 50                      	push	ax		;coloca xc na pilha
   523 00000374 56                      	push	si		;coloca yc+r na pilha
   524 00000375 E89B00                  	call line
   525                                  	
   526                                  		
   527 00000378 89CF                    	mov		di,cx
   528 0000037A 81EF0100                	sub		di,1	 ;di=r-1
   529 0000037E BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   530                                  	
   531                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   532                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   533                                  ;valores positivos para d
   534                                  
   535                                  stay_full:				;loop
   536 00000381 89FE                    	mov		si,di
   537 00000383 81FE0000                	cmp		si,0
   538 00000387 7F0E                    	jg		inf_full       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   539 00000389 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   540 0000038B D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   541 0000038D 81C60300                	add		si,3
   542 00000391 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   543 00000393 42                      	inc		dx		;incrementa dx
   544 00000394 E90E00                  	jmp		plotar_full
   545                                  inf_full:	
   546 00000397 89D6                    	mov		si,dx
   547 00000399 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   548 0000039B D1E6                    	sal		si,1
   549 0000039D 81C60500                	add		si,5
   550 000003A1 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   551 000003A3 42                      	inc		dx		;incrementa x (dx)
   552 000003A4 49                      	dec		cx		;decrementa y (cx)
   553                                  	
   554                                  plotar_full:	
   555 000003A5 89C6                    	mov		si,ax
   556 000003A7 01CE                    	add		si,cx
   557 000003A9 56                      	push	si		;coloca a abcisa y+xc na pilha			
   558 000003AA 89DE                    	mov		si,bx
   559 000003AC 29D6                    	sub		si,dx
   560 000003AE 56                      	push    si		;coloca a ordenada yc-x na pilha
   561 000003AF 89C6                    	mov		si,ax
   562 000003B1 01CE                    	add		si,cx
   563 000003B3 56                      	push	si		;coloca a abcisa y+xc na pilha	
   564 000003B4 89DE                    	mov		si,bx
   565 000003B6 01D6                    	add		si,dx
   566 000003B8 56                      	push    si		;coloca a ordenada yc+x na pilha	
   567 000003B9 E85700                  	call 	line
   568                                  	
   569 000003BC 89C6                    	mov		si,ax
   570 000003BE 01D6                    	add		si,dx
   571 000003C0 56                      	push	si		;coloca a abcisa xc+x na pilha			
   572 000003C1 89DE                    	mov		si,bx
   573 000003C3 29CE                    	sub		si,cx
   574 000003C5 56                      	push    si		;coloca a ordenada yc-y na pilha
   575 000003C6 89C6                    	mov		si,ax
   576 000003C8 01D6                    	add		si,dx
   577 000003CA 56                      	push	si		;coloca a abcisa xc+x na pilha	
   578 000003CB 89DE                    	mov		si,bx
   579 000003CD 01CE                    	add		si,cx
   580 000003CF 56                      	push    si		;coloca a ordenada yc+y na pilha	
   581 000003D0 E84000                  	call	line
   582                                  	
   583 000003D3 89C6                    	mov		si,ax
   584 000003D5 29D6                    	sub		si,dx
   585 000003D7 56                      	push	si		;coloca a abcisa xc-x na pilha			
   586 000003D8 89DE                    	mov		si,bx
   587 000003DA 29CE                    	sub		si,cx
   588 000003DC 56                      	push    si		;coloca a ordenada yc-y na pilha
   589 000003DD 89C6                    	mov		si,ax
   590 000003DF 29D6                    	sub		si,dx
   591 000003E1 56                      	push	si		;coloca a abcisa xc-x na pilha	
   592 000003E2 89DE                    	mov		si,bx
   593 000003E4 01CE                    	add		si,cx
   594 000003E6 56                      	push    si		;coloca a ordenada yc+y na pilha	
   595 000003E7 E82900                  	call	line
   596                                  	
   597 000003EA 89C6                    	mov		si,ax
   598 000003EC 29CE                    	sub		si,cx
   599 000003EE 56                      	push	si		;coloca a abcisa xc-y na pilha			
   600 000003EF 89DE                    	mov		si,bx
   601 000003F1 29D6                    	sub		si,dx
   602 000003F3 56                      	push    si		;coloca a ordenada yc-x na pilha
   603 000003F4 89C6                    	mov		si,ax
   604 000003F6 29CE                    	sub		si,cx
   605 000003F8 56                      	push	si		;coloca a abcisa xc-y na pilha	
   606 000003F9 89DE                    	mov		si,bx
   607 000003FB 01D6                    	add		si,dx
   608 000003FD 56                      	push    si		;coloca a ordenada yc+x na pilha	
   609 000003FE E81200                  	call	line
   610                                  	
   611 00000401 39D1                    	cmp		cx,dx
   612 00000403 7203                    	jb		fim_full_circle  ;se cx (y) est� abaixo de dx (x), termina     
   613 00000405 E979FF                  	jmp		stay_full		;se cx (y) est� acima de dx (x), continua no loop
   614                                  	
   615                                  	
   616                                  fim_full_circle:
   617 00000408 5F                      	pop		di
   618 00000409 5E                      	pop		si
   619 0000040A 5A                      	pop		dx
   620 0000040B 59                      	pop		cx
   621 0000040C 5B                      	pop		bx
   622 0000040D 58                      	pop		ax
   623 0000040E 9D                      	popf
   624 0000040F 5D                      	pop		bp
   625 00000410 C20600                  	ret		6
   626                                  ;-----------------------------------------------------------------------------
   627                                  ;
   628                                  ;   fun��o line
   629                                  ;
   630                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   631                                  line:
   632 00000413 55                      		push		bp
   633 00000414 89E5                    		mov		bp,sp
   634 00000416 9C                      		pushf                        ;coloca os flags na pilha
   635 00000417 50                      		push 		ax
   636 00000418 53                      		push 		bx
   637 00000419 51                      		push		cx
   638 0000041A 52                      		push		dx
   639 0000041B 56                      		push		si
   640 0000041C 57                      		push		di
   641 0000041D 8B460A                  		mov		ax,[bp+10]   ; resgata os valores das coordenadas
   642 00000420 8B5E08                  		mov		bx,[bp+8]    ; resgata os valores das coordenadas
   643 00000423 8B4E06                  		mov		cx,[bp+6]    ; resgata os valores das coordenadas
   644 00000426 8B5604                  		mov		dx,[bp+4]    ; resgata os valores das coordenadas
   645 00000429 39C8                    		cmp		ax,cx
   646 0000042B 7408                    		je		line2
   647 0000042D 721C                    		jb		line1
   648 0000042F 91                      		xchg		ax,cx
   649 00000430 87DA                    		xchg		bx,dx
   650 00000432 E91600                  		jmp		line1
   651                                  line2:		; deltax=0
   652 00000435 39D3                    		cmp		bx,dx  ;subtrai dx de bx
   653 00000437 7202                    		jb		line3
   654 00000439 87DA                    		xchg		bx,dx        ;troca os valores de bx e dx entre eles
   655                                  line3:	; dx > bx
   656 0000043B 50                      		push		ax
   657 0000043C 53                      		push		bx
   658 0000043D E811FE                  		call 		plot_xy
   659 00000440 39D3                    		cmp		bx,dx
   660 00000442 7503                    		jne		line31
   661 00000444 E9C600                  		jmp		fim_line
   662 00000447 43                      line31:		inc		bx
   663 00000448 E9F0FF                  		jmp		line3
   664                                  ;deltax <>0
   665                                  line1:
   666                                  ; comparar m�dulos de deltax e deltay sabendo que cx>ax
   667                                  	; cx > ax
   668 0000044B 51                      		push		cx
   669 0000044C 29C1                    		sub		cx,ax
   670 0000044E 890E[0600]              		mov		[deltax],cx
   671 00000452 59                      		pop		cx
   672 00000453 52                      		push		dx
   673 00000454 29DA                    		sub		dx,bx
   674 00000456 7702                    		ja		line32
   675 00000458 F7DA                    		neg		dx
   676                                  line32:		
   677 0000045A 8916[0800]              		mov		[deltay],dx
   678 0000045E 5A                      		pop		dx
   679                                  
   680 0000045F 50                      		push		ax
   681 00000460 A1[0600]                		mov		ax,[deltax]
   682 00000463 3B06[0800]              		cmp		ax,[deltay]
   683 00000467 58                      		pop		ax
   684 00000468 724D                    		jb		line5
   685                                  
   686                                  	; cx > ax e deltax>deltay
   687 0000046A 51                      		push		cx
   688 0000046B 29C1                    		sub		cx,ax
   689 0000046D 890E[0600]              		mov		[deltax],cx
   690 00000471 59                      		pop		cx
   691 00000472 52                      		push		dx
   692 00000473 29DA                    		sub		dx,bx
   693 00000475 8916[0800]              		mov		[deltay],dx
   694 00000479 5A                      		pop		dx
   695                                  
   696 0000047A 89C6                    		mov		si,ax
   697                                  line4:
   698 0000047C 50                      		push		ax
   699 0000047D 52                      		push		dx
   700 0000047E 56                      		push		si
   701 0000047F 29C6                    		sub		si,ax	;(x-x1)
   702 00000481 A1[0800]                		mov		ax,[deltay]
   703 00000484 F7EE                    		imul		si
   704 00000486 8B36[0600]              		mov		si,[deltax]		;arredondar
   705 0000048A D1EE                    		shr		si,1
   706                                  ; se numerador (DX)>0 soma se <0 subtrai
   707 0000048C 81FA0000                		cmp		dx,0
   708 00000490 7C09                    		jl		ar1
   709 00000492 01F0                    		add		ax,si
   710 00000494 81D20000                		adc		dx,0
   711 00000498 E90600                  		jmp		arc1
   712 0000049B 29F0                    ar1:		sub		ax,si
   713 0000049D 81DA0000                		sbb		dx,0
   714                                  arc1:
   715 000004A1 F73E[0600]              		idiv		word [deltax]
   716 000004A5 01D8                    		add		ax,bx
   717 000004A7 5E                      		pop		si
   718 000004A8 56                      		push		si
   719 000004A9 50                      		push		ax
   720 000004AA E8A4FD                  		call		plot_xy
   721 000004AD 5A                      		pop		dx
   722 000004AE 58                      		pop		ax
   723 000004AF 39CE                    		cmp		si,cx
   724 000004B1 745A                    		je		fim_line
   725 000004B3 46                      		inc		si
   726 000004B4 E9C5FF                  		jmp		line4
   727                                  
   728 000004B7 39D3                    line5:		cmp		bx,dx
   729 000004B9 7203                    		jb 		line7
   730 000004BB 91                      		xchg		ax,cx
   731 000004BC 87DA                    		xchg		bx,dx
   732                                  line7:
   733 000004BE 51                      		push		cx
   734 000004BF 29C1                    		sub		cx,ax
   735 000004C1 890E[0600]              		mov		[deltax],cx
   736 000004C5 59                      		pop		cx
   737 000004C6 52                      		push		dx
   738 000004C7 29DA                    		sub		dx,bx
   739 000004C9 8916[0800]              		mov		[deltay],dx
   740 000004CD 5A                      		pop		dx
   741 000004CE 89DE                    		mov		si,bx
   742                                  line6:
   743 000004D0 52                      		push		dx
   744 000004D1 56                      		push		si
   745 000004D2 50                      		push		ax
   746 000004D3 29DE                    		sub		si,bx	;(y-y1)
   747 000004D5 A1[0600]                		mov		ax,[deltax]
   748 000004D8 F7EE                    		imul		si
   749 000004DA 8B36[0800]              		mov		si,[deltay]		;arredondar
   750 000004DE D1EE                    		shr		si,1
   751                                  ; se numerador (DX)>0 soma se <0 subtrai
   752 000004E0 81FA0000                		cmp		dx,0
   753 000004E4 7C09                    		jl		ar2
   754 000004E6 01F0                    		add		ax,si
   755 000004E8 81D20000                		adc		dx,0
   756 000004EC E90600                  		jmp		arc2
   757 000004EF 29F0                    ar2:		sub		ax,si
   758 000004F1 81DA0000                		sbb		dx,0
   759                                  arc2:
   760 000004F5 F73E[0800]              		idiv		word [deltay]
   761 000004F9 89C7                    		mov		di,ax
   762 000004FB 58                      		pop		ax
   763 000004FC 01C7                    		add		di,ax
   764 000004FE 5E                      		pop		si
   765 000004FF 57                      		push		di
   766 00000500 56                      		push		si
   767 00000501 E84DFD                  		call		plot_xy
   768 00000504 5A                      		pop		dx
   769 00000505 39D6                    		cmp		si,dx
   770 00000507 7404                    		je		fim_line
   771 00000509 46                      		inc		si
   772 0000050A E9C3FF                  		jmp		line6
   773                                  
   774                                  fim_line:
   775 0000050D 5F                      		pop		di
   776 0000050E 5E                      		pop		si
   777 0000050F 5A                      		pop		dx
   778 00000510 59                      		pop		cx
   779 00000511 5B                      		pop		bx
   780 00000512 58                      		pop		ax
   781 00000513 9D                      		popf
   782 00000514 5D                      		pop		bp
   783 00000515 C20800                  		ret		8
   784                                  ;*******************************************************************
   785                                  segment data
   786                                  
   787 00000000 0F                      cor		db		branco_intenso
   788                                  
   789                                  ;	I R G B COR
   790                                  ;	0 0 0 0 preto
   791                                  ;	0 0 0 1 azul
   792                                  ;	0 0 1 0 verde
   793                                  ;	0 0 1 1 cyan
   794                                  ;	0 1 0 0 vermelho
   795                                  ;	0 1 0 1 magenta
   796                                  ;	0 1 1 0 marrom
   797                                  ;	0 1 1 1 branco
   798                                  ;	1 0 0 0 cinza
   799                                  ;	1 0 0 1 azul claro
   800                                  ;	1 0 1 0 verde claro
   801                                  ;	1 0 1 1 cyan claro
   802                                  ;	1 1 0 0 rosa
   803                                  ;	1 1 0 1 magenta claro
   804                                  ;	1 1 1 0 amarelo
   805                                  ;	1 1 1 1 branco intenso
   806                                  
   807                                  preto		equ		0
   808                                  azul		equ		1
   809                                  verde		equ		2
   810                                  cyan		equ		3
   811                                  vermelho	equ		4
   812                                  magenta		equ		5
   813                                  marrom		equ		6
   814                                  branco		equ		7
   815                                  cinza		equ		8
   816                                  azul_claro	equ		9
   817                                  verde_claro	equ		10
   818                                  cyan_claro	equ		11
   819                                  rosa		equ		12
   820                                  magenta_claro	equ		13
   821                                  amarelo		equ		14
   822                                  branco_intenso	equ		15
   823                                  
   824 00000001 00                      modo_anterior	db		0
   825 00000002 0000                    linha   	dw  		0
   826 00000004 0000                    coluna  	dw  		0
   827 00000006 0000                    deltax		dw		0
   828 00000008 0000                    deltay		dw		0	
   829 0000000A 557369656C20466572-     nome_aluno    	db  		'Usiel Ferreira Lopes Junior'
   830 00000013 7265697261204C6F70-
   831 0000001C 6573204A756E696F72 
   832 00000025 4162726972              abrir_str    	db  		'Abrir'
   833 0000002A 4649525F31              fir1_str    	db  		'FIR_1'
   834 0000002F 4649525F32              fir2_str    	db  		'FIR_2'
   835 00000034 4649525F33              fir3_str    	db  		'FIR_3'
   836 00000039 53616972                sair_str    	db  		'Sair'
   837 0000003D 3E203E203E              seta_str    	db  		'> > >'
   838                                  ;*************************************************************************
   839                                  segment stack stack
   840 00000000 <res 00000200>              		resb 		512
   841                                  stacktop:
   842                                  
   843                                  
